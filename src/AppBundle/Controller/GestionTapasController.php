<?php

namespace AppBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use AppBundle\Entity\Tapa;
use AppBundle\Entity\Categoria;
use AppBundle\Entity\Ingrediente;
use AppBundle\Form\TapaType;
use AppBundle\Form\CategoriaType;
use AppBundle\Form\IngredienteType;

/**
 * @Route("/gestionTapas")
 */
class GestionTapasController extends Controller
{
    /**
     * @Route("/nuevaTapa", name="nuevaTapa")
     */
    public function nuevaTapaAction(Request $request)
    {
        
        $tapa = new Tapa();
        $form = $this->createForm(TapaType::class, $tapa);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $tapa = $form->getData();
            $fotoFile = $tapa->getfoto();
            $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();
             // Move the file to the directory where brochures are stored
             try {
                $fotoFile->move(
                    $this->getParameter('tapaImg_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }

            $tapa->setFoto($fileName);
            $tapa->setFechaCreacion(new \DateTime());
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($tapa);
            $entityManager->flush();
    
           return $this->redirectToRoute('tapa', array('id'=>$tapa->getId()));
        }
        // replace this example code with whatever you need
        return $this->render('gestionTapas/nuevaTapa.html.twig', array('form'=> $form->createView()));
    }

     /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/nuevaCategoria", name="nuevaCategoria")
     */
    public function nuevaCatAction(Request $request)
    {
        $categoria = new Categoria();
        $form = $this->createForm(CategoriaType::class, $categoria);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $categoria = $form->getData();
            $fotoFile = $categoria->getfoto();
            $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();
             // Move the file to the directory where brochures are stored
             try {
                $fotoFile->move(
                    $this->getParameter('tapaImg_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }

            $categoria->setFoto($fileName);
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($categoria);
            $entityManager->flush();
    
           return $this->redirectToRoute('categoria', array('id'=>$categoria->getId()));
        }
        // replace this example code with whatever you need
        return $this->render('gestionTapas/nuevaCategoria.html.twig', array('form'=> $form->createView()));
    }

    /**
     * @Route("/nuevoIngrediente", name="nuevoIngrediente")
     */
    public function nuevoIngredienteAction(Request $request)
    {
        $ingrediente = new Ingrediente();
        $form = $this->createForm(IngredienteType::class, $ingrediente);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $ingrediente = $form->getData();
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($ingrediente);
            $entityManager->flush();
    
           return $this->redirectToRoute('ingrediente', array('id'=>$ingrediente->getId()));
        }
        // replace this example code with whatever you need
        return $this->render('gestionTapas/nuevoIngrediente.html.twig', array('form'=> $form->createView()));
    }
}